name: Main CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
    - uses: actions/checkout@v4
    - uses: julia-actions/setup-julia@v1
      with:
        version: '1.11.2'  # Используем ту же версию, что и локально
    - name: Install dependencies
      run: |
        julia --project -e 'using Pkg; Pkg.instantiate()'
        julia --project -e 'using Pkg; Pkg.resolve()'  # Явно разрешаем зависимости
    - name: Run tests
      run: julia --project -e 'using Pkg; Pkg.test()'

  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    - name: Install dependencies
      run: npm ci
    - name: Run tests
      run: npm test -- --watchAll=false

  docker-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Docker
      uses: docker/setup-buildx-action@v3  # Устанавливаем Docker
    - name: Install docker-compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose-plugin  # Устанавливаем docker-compose plugin
    - name: Validate docker-compose
      run: docker compose config  # Используем новую команду docker compose